{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","parameters","goods","isReversed","sortedAlphabetically","sortedByLength","goodsLength","visibleGoods","filter","good","length","sort","g1","g2","reverse","map","goodsFromServer","App","useState","started","setStarted","setReversed","setSortedAlphabetically","setSortedByLength","setGoodsLength","className","type","onClick","id","onChange","event","target","value","onLengthChange","ReactDOM","render","document","getElementById"],"mappings":"iOAkCeA,EA3BoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpC,cAAmFA,GAA5EC,EAAP,KAAcC,EAAd,KAA0BC,EAA1B,KAAgDC,EAAhD,KAAgEC,EAAhE,KACMC,EAAeL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAczD,OAZIF,GACFG,EAAaI,OAGXN,GACFE,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGF,OAASG,EAAGH,UAG3CP,GACFI,EAAaO,UAIb,6BACGP,EAAaQ,KAAI,SAAAN,GAAI,OACpB,6BACGA,GADMA,SCrBXO,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+GaC,EA5GO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOf,EAAP,KAAmBkB,EAAnB,KACA,EAAwDH,oBAAS,GAAjE,mBAAOd,EAAP,KAA6BkB,EAA7B,KACA,EAA4CJ,oBAAS,GAArD,mBAAOb,EAAP,KAAuBkB,EAAvB,KACA,EAAsCL,mBAAS,GAA/C,mBAAOZ,EAAP,KAAoBkB,EAApB,KA+BMvB,EAAoB,CACxBe,EACAb,EACAC,EACAC,EACAC,GAGF,OACE,sBAAKmB,UAAU,MAAf,UACE,wCACEN,GACA,wBACEO,KAAK,SACLC,QA3CM,WACZP,GAAW,IAwCP,mBAODD,GACC,qCACE,cAAC,EAAD,CACElB,WAAYA,IAEd,wBACEyB,KAAK,SACLC,QAnDM,WACdN,GAAalB,IAgDP,qBAMA,wBACEuB,KAAK,SACLC,QArDiB,WACzBL,GAAyBlB,GACzBmB,GAAkB,IAiDZ,iCAMA,wBACEG,KAAK,SACLC,QAtDW,WACnBJ,GAAmBlB,GACnBiB,GAAwB,IAkDlB,4BAMA,wBACEI,KAAK,SACLC,QAvDI,WACZN,GAAY,GACZC,GAAwB,GACxBC,GAAkB,GAClBC,EAAe,IAiDT,mBAMA,yBACEI,GAAG,SACHC,SAAU,SAACC,IAtDE,SAACA,GACtBN,GAAgBM,EAAMC,OAAOC,OAsDnBC,CAAeH,IAEjBE,MAAO1B,EALT,UAOE,wBAAQ0B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,0BCnHZE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.119421d1.chunk.js","sourcesContent":["import React from 'react';\nimport { Params } from '../types/Params';\n\ntype Props = {\n  parameters: Params\n};\n\nconst GoodsList: React.FC<Props> = ({ parameters }) => {\n  const [goods, isReversed, sortedAlphabetically, sortedByLength, goodsLength] = [...parameters];\n  const visibleGoods = goods.filter(good => good.length >= goodsLength);\n\n  if (sortedAlphabetically) {\n    visibleGoods.sort();\n  }\n\n  if (sortedByLength) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <ul>\n      {visibleGoods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\nimport { Params } from './types/Params';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [started, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortedAlphabetically, setSortedAlphabetically] = useState(false);\n  const [sortedByLength, setSortedByLength] = useState(false);\n  const [goodsLength, setGoodsLength] = useState(1);\n\n  const start = () => {\n    setStarted(true);\n  };\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortedAlphabetically(!sortedAlphabetically);\n    setSortedByLength(false);\n  };\n\n  const sortByLength = () => {\n    setSortedByLength(!sortedByLength);\n    setSortedAlphabetically(false);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortedAlphabetically(false);\n    setSortedByLength(false);\n    setGoodsLength(1);\n  };\n\n  const onLengthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setGoodsLength(+event.target.value);\n  };\n\n  const parameters:Params = [\n    goodsFromServer,\n    isReversed,\n    sortedAlphabetically,\n    sortedByLength,\n    goodsLength,\n  ];\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!started && (\n        <button\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n      {started && (\n        <>\n          <GoodsList\n            parameters={parameters}\n          />\n          <button\n            type=\"button\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n          <select\n            id=\"length\"\n            onChange={(event) => {\n              onLengthChange(event);\n            }}\n            value={goodsLength}\n          >\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}